func begin fun2
refparam "hello from fun 2"
refparam result
call printf, 1
refparam "%d = %d"
refparam i
refparam y
refparam result
call printf, 3
func end

func begin fun1
refparam "hello from fun 1"
refparam result
call printf, 1
refparam 3
refparam 8
refparam result
call fun2, 2
func end

func begin main
refparam 3
refparam result
call fun1, 1
t0 = 0
temp = t0
L0:
t1 = 5
t2 = temp < t1
IF not t2 GoTo L1
t3 = temp + 1
temp = t3
refparam "hello fo loop\n"
refparam result
call printf, 1
GoTo L0:
L1:
L2:
t4 = 0
t5 = temp > t4
IF not t5 GoTo L3
refparam "hello while loop\n"
refparam result
call printf, 1
t6 = 1
t7 = temp - t6
temp = t7
GoTo L2:
L3:
t8 = 20
t9 = 10
t10 = i == t9
IF not t10 GoTo L4
refparam "i is 10"
refparam result
call printf, 1
GoTo L5
L4:
t11 = 15
t12 = i == t11
IF not t12 GoTo L6
refparam "i is 15"
refparam result
call printf, 1
GoTo L7
L6:
t13 = 20
t14 = i == t13
IF not t14 GoTo L8
refparam "i is 20"
refparam result
call printf, 1
GoTo L9
L8:
refparam "i is not present"
refparam result
call printf, 1
L9:
L7:
L5:
func end